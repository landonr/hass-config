sonos_group_all:
  alias: Group all Sonos
  sequence:
  - service: media_player.join
    data:
      group_members:
      - media_player.bedroom
      - media_player.kitchen
      - media_player.office
    target:
      entity_id: media_player.beam
  mode: single
sonos_daily_mix:
  alias: sonos daily mix
  sequence:
  - service: script.turn_on
    entity_id:
    - script.sonos_volume
    - script.sonos_group_all
  - service: tts.google_translate_say
    data:
      entity_id: media_player.beam
      message: daily mix
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: media_player.select_source
    data:
      source: Daily Mix 1
    target:
      entity_id: media_player.beam
  - service: media_player.shuffle_set
    data:
      shuffle: true
    target:
      entity_id: media_player.beam
  - service: media_player.media_next_track
    data: {}
    target:
      entity_id: media_player.beam
  mode: single
sonos_volume:
  sequence:
  - service: media_player.volume_set
    entity_id:
    - media_player.beam
    - media_player.kitchen
    data:
      volume_level: 0.3
  - service: media_player.volume_set
    entity_id:
    - media_player.bedroom
    data:
      volume_level: 0.3
  - service: media_player.volume_mute
    data:
      entity_id:
      - media_player.beam
      - media_player.kitchen
      - media_player.bedroom
      is_volume_muted: false
  mode: single
  alias: Sonos Volume
warm:
  alias: warm scene script
  sequence:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.warm
  - service: adaptive_lighting.apply
    data:
      entity_id: switch.adaptive_lighting_default
  - service: input_select.select_option
    data:
      option: warm
    target:
      entity_id: input_select.lr_scene
  mode: single
off_script:
  alias: off script
  sequence:
  - service: mqtt.publish
    data:
      topic: zigbee2mqtt/all_lights/set
      payload: '{"scene_recall": 0}'
      qos: 0
      retain: false
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.off
  - service: input_select.select_option
    data:
      option: offScene
    target:
      entity_id: input_select.lr_scene
  mode: single
colors:
  sequence:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.colors
  - service: mqtt.publish
    data:
      topic: zigbee2mqtt/all_lights/set
      payload: '{"scene_recall": 2}'
  - service: input_select.select_option
    data:
      option: colors
    target:
      entity_id: input_select.lr_scene
  mode: single
  alias: colors scene script
stop_music:
  alias: Stop music
  sequence:
  - service: media_player.unjoin
    data: {}
    target:
      entity_id:
      - media_player.beam
      - media_player.kitchen
      - media_player.bedroom
      - media_player.kitchen
  - service: media_player.media_stop
    target:
      device_id:
      - 90e98d1ecee56bc8a850ac059eb531d3
      - 63b5451979abbfec3201ab24592e6900
      - 957d7ad9526a360f8ae9894d06373558
      - 42a1c1e1fcb60e6d406df564c541c715
    data: {}
  - service: media_player.clear_playlist
    target:
      device_id:
      - 90e98d1ecee56bc8a850ac059eb531d3
      - 63b5451979abbfec3201ab24592e6900
      - 957d7ad9526a360f8ae9894d06373558
      - 42a1c1e1fcb60e6d406df564c541c715
    data: {}
  - service: media_player.turn_off
    target:
      device_id:
      - 90e98d1ecee56bc8a850ac059eb531d3
      - 63b5451979abbfec3201ab24592e6900
      - 957d7ad9526a360f8ae9894d06373558
      - 42a1c1e1fcb60e6d406df564c541c715
    data: {}
  mode: single
volume_down_sonos:
  alias: volume down sonos
  sequence:
  - service: media_player.volume_set
    data_template:
      volume_level: '{{ state_attr(''media_player.beam'', ''volume_level'') | float
        - 0.05 }}'
    target:
      entity_id:
      - media_player.beam
      - media_player.bedroom
      - media_player.kitchen
      - media_player.office
  mode: single
volume_up_sonos:
  alias: volume up sonos
  sequence:
  - service: media_player.volume_set
    data_template:
      volume_level: '{{ state_attr(''media_player.beam'', ''volume_level'') | float
        + 0.05 }}'
    target:
      entity_id:
      - media_player.beam
      - media_player.bedroom
      - media_player.kitchen
      - media_player.office
  mode: single
set_tv_source:
  alias: Set TV Source
  sequence:
  - service: script.stop_music
  - service: media_player.volume_set
    target:
      entity_id:
      - media_player.beam
    data:
      volume_level: 0.28
  - service: tts.google_translate_say
    data:
      entity_id: media_player.beam
      message: TV
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: media_player.select_source
    target:
      entity_id: media_player.beam
    data:
      source: TV
  mode: single
roku_youtube:
  alias: Roku youtube
  sequence:
  - service: media_player.select_source
    target:
      entity_id: media_player.55_tcl_roku_tv
    data:
      source: YouTube
  - delay:
      hours: 0
      minutes: 0
      seconds: 12
      milliseconds: 0
  - service: remote.send_command
    target:
      entity_id: remote.55_tcl_roku_tv
    data:
      command: select
  mode: single
off_a:
  alias: off all script
  sequence:
  - service: script.off_script
    data: {}
  - service: script.stop_music
    data: {}
  - type: turn_off
    device_id: b2031546510b1ac0a601400cf695f550
    entity_id: remote.55_tcl_roku_tv
    domain: remote
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.tdisplay_sleep_toggle
  - service: button.press
    data: {}
    target:
      entity_id: button.tower_sleep
  mode: single
sonos_r:
  alias: sonos brenin recent
  sequence:
  - service: script.turn_on
    entity_id:
    - script.sonos_volume
    - script.sonos_group_all
  - service: tts.google_translate_say
    data:
      entity_id: media_player.beam
      message: dj bren star
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: media_player.select_source
    data:
      source: B All Songs
    target:
      entity_id: media_player.beam
  - service: media_player.shuffle_set
    data:
      shuffle: true
    target:
      entity_id: media_player.beam
  - service: media_player.media_next_track
    data: {}
    target:
      entity_id: media_player.beam
  mode: single
s:
  alias: Scene Rotation Script
  sequence:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.lr_scene
        state: offScene
      sequence:
      - service: input_select.select_option
        data:
          option: dim
        target:
          entity_id: input_select.lr_scene
    default:
    - service: input_select.select_next
      target:
        entity_id: input_select.lr_scene
      data: {}
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.lr_scene
        state: warm
      sequence:
      - service: script.warm
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.lr_scene
        state: dim
      sequence:
      - service: script.dim_scene_script
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.lr_scene
        state: offScene
      sequence:
      - service: script.off_script
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.lr_scene
        state: colors
      sequence:
      - service: script.colors
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.lr_scene
        state: bright
      sequence:
      - service: script.bright_scene_script
        data: {}
    default: []
  mode: single
'1649791446703':
  alias: Bang scene
  sequence:
  - service: number.set_value
    data:
      value: '2'
    target:
      entity_id:
      - number.beam_bass
      - number.bedroom_bass
      - number.kitchen_bass
      - number.office_bass
  - service: number.set_value
    data:
      value: '1'
    target:
      entity_id:
      - number.beam_treble
      - number.bedroom_treble
      - number.kitchen_treble
      - number.office_treble
  - service: switch.turn_on
    data: {}
    target:
      entity_id:
      - switch.kitchen_loudness
      - switch.bedroom_loudness
      - switch.beam_loudness
      - switch.office_loudness
  mode: single
  icon: mdi:bullhorn
quiet_scene:
  alias: Quiet scene
  sequence:
  - service: number.set_value
    data:
      value: '-3'
    target:
      entity_id:
      - number.beam_bass
      - number.kitchen_bass
      - number.bedroom_bass
      - number.office_bass
  - service: number.set_value
    data:
      value: '0'
    target:
      entity_id:
      - number.beam_treble
      - number.bedroom_treble
      - number.kitchen_treble
      - number.office_treble
  - service: switch.turn_off
    data: {}
    target:
      entity_id:
      - switch.beam_loudness
      - switch.bedroom_loudness
      - switch.kitchen_loudness
      - switch.office_loudness
  mode: single
  icon: mdi:cat
dim_scene_script:
  alias: dim scene script
  sequence:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.dim
  - service: input_select.select_option
    data:
      option: dim
    target:
      entity_id: input_select.lr_scene
  mode: single
feed_cat_single:
  alias: Feed cat single
  sequence:
  - service: esphome.pin_test_feed_single
    data: {}
  mode: single
bright_scene_script:
  alias: bright scene script
  sequence:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.bright
  - service: input_select.select_option
    data:
      option: bright
    target:
      entity_id: input_select.lr_scene
  mode: single
wake_up_alarm:
  alias: wake up alarm
  sequence:
  - service: media_player.volume_mute
    data:
      is_volume_muted: false
    target:
      entity_id: media_player.bedroom
  - service: media_player.volume_set
    data:
      volume_level: 0.75
    target:
      entity_id: media_player.bedroom
  - service: media_player.unjoin
    data: {}
    target:
      entity_id: media_player.bedroom
  - service: media_player.play_media
    target:
      entity_id: media_player.bedroom
    data:
      media_content_id: FV:2/68
      media_content_type: favorite_item_id
    metadata:
      title: Feel Good Morning Mix
      thumbnail: https://seed-mix-image.spotifycdn.com/v6/img/desc/Feel%20Good%20Morning/en/large
      media_class: playlist
      children_media_class:
      navigateIds:
      - {}
      - media_content_type: favorites
        media_content_id: ''
      - media_content_type: favorites_folder
        media_content_id: object.container.playlistContainer
  - service: script.dim_scene_script
    data: {}
  mode: single
hs_light_set:
  alias: ESPhome HS Light Set
  sequence:
  - service: light.turn_on
    data_template:
      entity_id: '{{ entity_id }}'
      transition: 0
      brightness: '{{ brightness }}'
      hs_color:
      - '{{ hue }}'
      - '{{ saturation }}'
  mode: restart
volume_down_sonos_public:
  alias: volume down sonos public
  sequence:
  - service: notify.mobile_app_landorghini13
    data:
      message: turn it down!!! {{ state_attr('media_player.beam', 'volume_level')
        | float }}
      title: too loud!
  - service: media_player.volume_set
    data_template:
      volume_level: 0.2
    target:
      entity_id:
      - media_player.beam
      - media_player.bedroom
      - media_player.kitchen
      - media_player.office
  - service: media_player.play_media
    data:
      media_content_id: media-source://tts/cloud?message=Turn it down!
      media_content_type: music
      extra:
        volume: 30
    target:
      entity_id:
      - media_player.beam_tts
      - media_player.bedroom_tts
      - media_player.kitchen_tts
      - media_player.office_tts
  - service: script.quiet_scene
    data: {}
  mode: single
be_quiet_public:
  alias: be quiet public
  sequence:
  - service: notify.mobile_app_landorghini13
    data:
      message: be quiet!!! {{ state_attr('media_player.beam', 'volume_level') | float
        }}
      title: too loud!
  - service: media_player.volume_set
    data_template:
      volume_level: '{{ state_attr(''media_player.beam'', ''volume_level'') | float
        - 0.1 }}'
    target:
      entity_id:
      - media_player.beam
      - media_player.bedroom
      - media_player.kitchen
      - media_player.office
  - service: notify.mobile_app_landorghini13
    data:
      message: be quiet!!!
      title: too loud!
  - service: media_player.play_media
    data:
      media_content_id: media-source://tts/cloud?message=Be quiet!
      media_content_type: music
      extra:
        volume: 20
    target:
      entity_id:
      - media_player.beam_tts
      - media_player.bedroom_tts
      - media_player.kitchen_tts
      - media_player.office_tts
  - service: script.quiet_scene
    data: {}
  mode: single
play_pause_sonos:
  alias: play pause sonos
  sequence:
  - service: media_player.media_play_pause
    data: {}
    target:
      entity_id:
      - media_player.beam
      - media_player.kitchen
      - media_player.bedroom
      - media_player.office
  mode: single
change_display_to_tv:
  alias: Change Display To TV
  sequence:
  - service: button.press
    data: {}
    target:
      entity_id: button.changedisplaytv
  - service: media_player.select_source
    data:
      source: HDMI 2
    target:
      entity_id: media_player.55_tcl_roku_tv
  mode: single
change_display_to_pc:
  alias: Change Display To PC
  sequence:
  - service: button.press
    data: {}
    target:
      entity_id: button.changedisplaypc
  - service: media_player.turn_off
    data: {}
    target:
      entity_id: media_player.55_tcl_roku_tv
  - choose:
    - conditions:
      - condition: not
        conditions:
        - condition: state
          entity_id: input_select.pc_display
          state: PC
      sequence:
      - service: input_select.select_option
        data:
          option: PC
        target:
          entity_id: input_select.pc_display
  mode: single
change_display_to_tv_extend:
  alias: Change Display To TV Extend
  sequence:
  - service: button.press
    data: {}
    target:
      entity_id: button.changedisplaytvextend
  - service: media_player.select_source
    data:
      source: HDMI 2
    target:
      entity_id: media_player.55_tcl_roku_tv
  mode: single
set_desk_height:
  alias: set desk height
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ height == ''toggle'' }}'
      sequence:
      - service: number.set_value
        data:
          value: "{% if ( states.number.desk_height_cm.state | round ) >= (states.input_number.desk_standing_height.state
            | int) - 5 -%}\n  {{ states.input_number.desk_seated_height.state }}\n{%
            else -%}\n  {{ states.input_number.desk_standing_height.state }}\n{% endif
            -%}\n"
        target:
          entity_id: number.desk_height_cm
    - conditions:
      - condition: template
        value_template: '{{ height == ''high'' }}'
      sequence:
      - service: number.set_value
        data:
          value: '{{ states.input_number.desk_standing_height.state }}

            '
        target:
          entity_id: number.desk_height_cm
    - conditions:
      - condition: template
        value_template: '{{ height == ''low'' }}'
      sequence:
      - service: number.set_value
        data:
          value: '{{ states.input_number.desk_seated_height.state }}

            '
        target:
          entity_id: number.desk_height_cm
    default:
    - service: number.set_value
      data:
        value: '{{ height }}

          '
      target:
        entity_id: number.desk_height_cm
  mode: single
notify_landon:
  alias: notify landon
  fields:
    title:
      description: The title of the notification
      example: State change
    message:
      description: The message of the notification
      example: Light is on!
    mode:
      description: auto, phone, tts
      example: auto
  sequence:
  - if:
    - condition: or
      conditions:
      - condition: template
        value_template: '{{ mode == ''phone'' }}'
      - condition: and
        conditions:
        - condition: template
          value_template: '{{ mode == ''auto'' }}'
        - condition: not
          conditions:
          - condition: zone
            entity_id: person.landon
            zone: zone.home
    then:
      service: notify.mobile_app_landorghini13
      data:
        message: '{{ message }}'
        title: '{{ title }}'
  - if:
    - condition: or
      conditions:
      - condition: template
        value_template: '{{ mode == ''tts'' }}'
      - condition: and
        conditions:
        - condition: template
          value_template: '{{ mode == ''auto'' }}'
        - condition: zone
          entity_id: person.landon
          zone: zone.home
    then:
    - service: media_player.play_media
      data:
        media_content_id: media-source://tts/cloud?message={{ message }}
        media_content_type: music
        extra:
          volume: 40
      target:
        entity_id:
        - media_player.bedroom_tts
        - media_player.beam_tts
        - media_player.kitchen_tts
  mode: single
morning_script:
  alias: Morning script
  sequence:
  - service: scene.turn_on
    target:
      entity_id: scene.hell
    metadata: {}
  - service: media_player.play_media
    data:
      media_content_id: media-source://tts/cloud?message={{ state_attr("sensor.daily_wake_up_announcement",
        "Announcement") }}
      media_content_type: music
      extra:
        volume: 50
    target:
      entity_id:
      - media_player.kitchen_tts
  - service: script.sonos_daily_mix
    data: {}
  - service: script.sonos_group_all
    data: {}
  mode: single
